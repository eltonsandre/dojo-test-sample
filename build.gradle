plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.github.eltonsandre.sample.cucumber'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_15

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs = ['-parameters', '-Amapstruct.defaultComponentModel=spring']
compileTestJava.options.compilerArgs = ['-parameters', '-Amapstruct.defaultComponentModel=spring']

compileJava.dependsOn(processResources)


ext {
    set('springCloudVersion', "2020.0.0")
    set('testcontainersVersion', "1.15.1")
    set('cucumberVersion', '6.8.1')
    set('mapstructVersion', '1.4.1.Final')
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'http://repo.maven.apache.org/maven2' }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    cucumberRuntime {
        extendsFrom testImplementation
    }
}


dependencies {

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    ['annotationProcessor', 'compileOnly', 'testAnnotationProcessor', 'testCompileOnly']
            .each { conf -> add(conf, 'org.projectlombok:lombok') }

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor',
            "org.mapstruct:mapstruct-processor:$mapstructVersion"

    implementation 'org.springframework.boot:spring-boot-starter-webflux',
            'org.springframework.boot:spring-boot-starter-validation'

    implementation "org.mapstruct:mapstruct:$mapstructVersion",
            'io.vavr:vavr:0.10.3'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation 'io.projectreactor:reactor-test',
            'org.springframework.cloud:spring-cloud-starter-contract-stub-runner' //'org.springframework.cloud:spring-cloud-contract-wiremock',

    testImplementation 'org.testcontainers:junit-jupiter',
            'org.testcontainers:testcontainers',
            'org.testcontainers:mongodb'

    testImplementation 'org.mockito:mockito-inline',
            "io.cucumber:cucumber-java:$cucumberVersion",
            "io.cucumber:cucumber-junit:$cucumberVersion",
            "io.cucumber:cucumber-spring:$cucumberVersion"

}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
test {
    useJUnitPlatform()
}

task cucumber() {

    dependsOn assemble, compileTestJava

    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'hellocucumber', 'src/test/resources']
        }
    }
}
